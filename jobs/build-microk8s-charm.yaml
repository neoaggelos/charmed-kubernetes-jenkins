# Builds microk8s charm and uploads to CharmHub

- job:
    name: 'build-microk8s-charm'
    description: |
      Build MicroK8s charm, upload revision to CharmHub and release to edge.
    project-type: freestyle
    node: runner-amd64
    wrappers:
      - ansicolor
      - timestamps
      - workspace-cleanup
      - credentials-binding:
          - file:
              credential-id: JUJUCONTROLLERS_SERVERSTACK
              variable: JUJUCONTROLLERS_SERVERSTACK
          - file:
              credential-id: JUJUACCOUNTS_SERVERSTACK
              variable: JUJUACCOUNTS_SERVERSTACK
    parameters:
      - string:
          name: REPOSITORY
          default: "https://github.com/canonical/charm-microk8s.git"
          description: |
            Source repository for MicroK8s charm.
      - string:
          name: BRANCH
          default: "master"
          description: |
            Branch from which to build the MicroK8s charm.
      - bool:
          name: RELEASE_TO_EDGE
          default: "false"
          description: |
            Release charm to edge channel.
    properties:
      - build-discarder:
          num-to-keep: 3
      - build-blocker:
          use-build-blocker: true
          blocking-jobs:
            - "infra.*"
          block-level: 'NODE'

    publishers:
      - archive:
          artifacts: '*.charm'

    builders:
      - shell: |
          #!/bin/bash
          set -eux
          set -o allexport
          [[ -f $WORKSPACE/.env ]] && source $WORKSPACE/.env
          set +o allexport

          container="${JOB_NAME}-${BUILD_NUMBER}"
          function cleanup() {
            set +e
            sudo lxc shell $container -- bash -c 'charmcraft logout'
            sudo lxc delete $container --force
            juju destroy-model $JUJU_MODEL -y --timeout 1m --force
            rm -rf $JUJU_DATA
            set -e
          }
          trap cleanup EXIT

          sudo lxc launch ubuntu:20.04 $container
          timeout 5m bash -c "
            until sudo lxc shell $container -- bash -c 'snap install charmcraft --classic'; do
              sleep 3
            done
          "

          # TODO: update when charmcraft supports non-interactive logins
          # sudo lxc file push $CHARMCRAFT_CREDENTIALS $container/charmcraft.credentials
          # sudo lxc shell $container -- bash -c 'mkdir -p ~/snap/charmcraft/common/config/charmcraft.credentials'
          # sudo lxc shell $container -- bash -c 'cp charmcraft.credentials ~/snap/charmcraft/common/config/charmcraft.credentials'
          sudo lxc shell $container -- bash -c 'charmcraft login'
          sudo lxc shell $container -- bash -c 'charmcraft whoami'

          export JUJU_DATA=$PWD/data
          export JUJU_MODEL=build-microk8s-charm-${BUILD_NUMBER}
          mkdir -p $JUJU_DATA
          cp $JUJUACCOUNTS_SERVERSTACK $JUJU_DATA/accounts.yaml
          cp $JUJUCONTROLLERS_SERVERSTACK $JUJU_DATA/controllers.yaml

          export PROXY=http://squid.internal:3128

          juju add-model $JUJU_MODEL
          juju model-config http-proxy=$PROXY https-proxy=$PROXY ftp-proxy=$PROXY no-proxy=10.0.0.0/8,192.168.0.0/16,127.0.0.1

          juju deploy ubuntu --constraints 'cores=8 mem=4G root-disk=20G allocate-public-ip=true'
          juju-wait -e $JUJU_MODEL -w

          juju ssh ubuntu/leader -- 'sudo snap install lxd'
          juju ssh ubuntu/leader -- 'sudo lxd init --auto'
          juju ssh ubuntu/leader -- 'sudo usermod -a -G lxd ubuntu'
          juju ssh ubuntu/leader -- 'sudo snap install charmcraft --classic'

          juju ssh ubuntu/leader -- "git clone ${REPOSITORY} -b ${BRANCH} charm"
          juju ssh ubuntu/leader -- 'cd charm && charmcraft build -v'

          juju scp 'ubuntu/leader:charm/*.charm' ./microk8s.charm

          sudo lxc file push ./microk8s.charm $container/microk8s.charm
          sudo lxc shell $container -- bash -c 'charmcraft upload /microk8s.charm'

          charm=$(unzip -p ./microk8s.charm metadata.yaml | grep "name:" | cut -f2 -d:)
          revision=$(sudo lxc shell $container -- bash -c "charmcraft revisions $charm 2>&1 | grep "^[0-9]" | head -1 | cut -f1 -d' '")

          if [[ $RELEASE_TO_EDGE == 'true' ]]; then
            echo Release revision $revision of charm $charm to edge
            sudo lxc shell $container -- bash -c "charmcraft release $charm --revision $revision --channel edge"
          fi
          }

          run 'sudo snap install lxd'
          run 'sudo lxd init --auto'
          run 'sudo usermod -a -G lxd ubuntu'
          run 'sudo snap install charmcraft --classic'
          run 'mkdir -p snap/charmcraft/common/config'

          # TODO: update when charmcraft supports non-interactive logins
          # juju scp $CHARMCRAFT_CREDENTIALS ubuntu/leader:snap/charmcraft/common/config/charmcraft.credentials
          run 'charmcraft login'

          run 'charmcraft whoami'
          run "git clone ${REPOSITORY} -b ${BRANCH} charm"
          run 'cd charm && charmcraft build -v'
          run 'cd charm && charmcraft upload *.charm'

          juju scp 'ubuntu/leader:charm/*.charm' ./
